=begin
#Telegram bot API

#This is a swagger defenition for [Telegram bot API](https://core.telegram.org/bots/api). 

OpenAPI spec version: 3.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for Teleswagger::ChatsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ChatsApi' do
  before do
    # run before each test
    @instance = Teleswagger::ChatsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ChatsApi' do
    it 'should create an instance of ChatsApi' do
      expect(@instance).to be_instance_of(Teleswagger::ChatsApi)
    end
  end

  # unit tests for delete_chat_photo
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param [Hash] opts the optional parameters
  # @return [ResponseBool]
  describe 'delete_chat_photo test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for export_chat_invite_link
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'export_chat_invite_link test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_chat
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'get_chat test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_chat_administrators
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2004]
  describe 'get_chat_administrators test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_chat_member
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2006]
  describe 'get_chat_member test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_chat_members_count
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2005]
  describe 'get_chat_members_count test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for kick_chat_member
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :until_date 
  # @return [ResponseBool]
  describe 'kick_chat_member test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for leave_chat
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param [Hash] opts the optional parameters
  # @return [ResponseBool]
  describe 'leave_chat test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pin_chat_message
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param message_id 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :disable_notification 
  # @return [ResponseBool]
  describe 'pin_chat_message test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for promote_chat_member
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ResponseBool]
  describe 'promote_chat_member test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for restrict_chat_member
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [ResponseBool]
  describe 'restrict_chat_member test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_chat_action
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param action 
  # @param [Hash] opts the optional parameters
  # @return [ResponseBool]
  describe 'send_chat_action test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_chat_description
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param description 
  # @param [Hash] opts the optional parameters
  # @return [ResponseBool]
  describe 'set_chat_description test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_chat_photo
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param photo 
  # @param [Hash] opts the optional parameters
  # @return [ResponseBool]
  describe 'set_chat_photo test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_chat_title
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param title 
  # @param [Hash] opts the optional parameters
  # @return [ResponseBool]
  describe 'set_chat_title test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unban_chat_member
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [ResponseBool]
  describe 'unban_chat_member test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unpin_chat_message
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param [Hash] opts the optional parameters
  # @return [ResponseBool]
  describe 'unpin_chat_message test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
