=begin
#Telegram bot API

#This is a swagger defenition for [Telegram bot API](https://core.telegram.org/bots/api). 

OpenAPI spec version: 3.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for Teleswagger::AttachmentsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AttachmentsApi' do
  before do
    # run before each test
    @instance = Teleswagger::AttachmentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AttachmentsApi' do
    it 'should create an instance of AttachmentsApi' do
      expect(@instance).to be_instance_of(Teleswagger::AttachmentsApi)
    end
  end

  # unit tests for get_file
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2002]
  describe 'get_file test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_audio
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param audio 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :caption 
  # @option opts [Integer] :duration 
  # @option opts [String] :performer 
  # @option opts [String] :title 
  # @option opts [BOOLEAN] :disable_notification 
  # @option opts [Integer] :reply_to_message_id 
  # @option opts [String] :reply_markup json string of reply_markup object
  # @return [ResponseMessage]
  describe 'send_audio test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_audio_link
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param [Hash] opts the optional parameters
  # @option opts [SendAudioLinkBody] :body 
  # @return [ResponseMessage]
  describe 'send_audio_link test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_contact
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param [Hash] opts the optional parameters
  # @option opts [SendContactBody] :body 
  # @return [ResponseMessage]
  describe 'send_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_document
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :caption 
  # @option opts [BOOLEAN] :disable_notification 
  # @option opts [Integer] :reply_to_message_id 
  # @option opts [String] :reply_markup json string of reply_markup object
  # @return [ResponseMessage]
  describe 'send_document test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_document_link
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param [Hash] opts the optional parameters
  # @option opts [SendDocumentLinkBody] :body 
  # @return [ResponseMessage]
  describe 'send_document_link test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_location
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param [Hash] opts the optional parameters
  # @option opts [SendLocationBody] :body 
  # @return [ResponseMessage]
  describe 'send_location test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_photo
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param photo 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :caption 
  # @option opts [BOOLEAN] :disable_notification 
  # @option opts [Integer] :reply_to_message_id 
  # @option opts [String] :reply_markup json string of reply_markup object
  # @return [ResponseMessage]
  describe 'send_photo test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_photo_link
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param [Hash] opts the optional parameters
  # @option opts [SendPhotoLinkBody] :body 
  # @return [ResponseMessage]
  describe 'send_photo_link test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_sticker
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param sticker 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :disable_notification 
  # @option opts [Integer] :reply_to_message_id 
  # @option opts [String] :reply_markup json string of reply_markup object
  # @return [ResponseMessage]
  describe 'send_sticker test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_sticker_link
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param [Hash] opts the optional parameters
  # @option opts [SendStickerLinkBody] :body 
  # @return [ResponseMessage]
  describe 'send_sticker_link test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_venue
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param [Hash] opts the optional parameters
  # @option opts [SendVenueBody] :body 
  # @return [ResponseMessage]
  describe 'send_venue test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_video
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param video 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :duration 
  # @option opts [Integer] :width 
  # @option opts [Integer] :height 
  # @option opts [String] :caption 
  # @option opts [BOOLEAN] :disable_notification 
  # @option opts [Integer] :reply_to_message_id 
  # @option opts [String] :reply_markup json string of reply_markup object
  # @return [ResponseMessage]
  describe 'send_video test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_video_link
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param [Hash] opts the optional parameters
  # @option opts [SendVideoLinkBody] :body 
  # @return [ResponseMessage]
  describe 'send_video_link test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_video_note
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param video_note 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :duration 
  # @option opts [Integer] :length 
  # @option opts [BOOLEAN] :disable_notification 
  # @option opts [Integer] :reply_to_message_id 
  # @option opts [String] :reply_markup json string of reply_markup object
  # @return [ResponseMessage]
  describe 'send_video_note test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_video_note_link
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param [Hash] opts the optional parameters
  # @option opts [SendVideoNoteLinkBody] :body 
  # @return [ResponseMessage]
  describe 'send_video_note_link test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_voice
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param chat_id 
  # @param voice 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :caption 
  # @option opts [Integer] :duration 
  # @option opts [BOOLEAN] :disable_notification 
  # @option opts [Integer] :reply_to_message_id 
  # @option opts [String] :reply_markup json string of reply_markup object
  # @return [ResponseMessage]
  describe 'send_voice test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_voice_link
  # 
  # 
  # @param token bot&#39;s token to authorize the request
  # @param [Hash] opts the optional parameters
  # @option opts [SendVoiceLinkBody] :body 
  # @return [ResponseMessage]
  describe 'send_voice_link test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
